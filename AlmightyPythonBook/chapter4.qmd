# Python Syntax and Variables  

In this chapter, weâ€™ll cover the basics of Pythonâ€™s syntax, data types, and how to use variables. These concepts are essential for writing your first Python programs. Remember, the best way to learn is by coding!  

::: {.callout-tip}
ðŸš€ Open your VSCode, create a new Python file (e.g., `variables.py`), and type the examples from this chapter. Modify the code, play with it, and see what happens. Experimentation is key!  
:::

---
## Comments in Python  

Comments are lines in your code that Python ignores when running the program. They are used to explain what the code does, making it easier to understand for yourself and others. Comments can also be used to temporarily disable parts of your code.  

### Single-line Comments  
In Python, single-line comments start with the `#` symbol.  

```{python}
# This is a comment
print("Hello, Almighty Python!")  # This comment is ignored
```

### Multi-line Comments
Python doesnâ€™t have a specific multi-line comment syntax, but you can use triple quotes (''') to create a block of comments.
```{python}
'''
This is a multi-line comment.
You can use it to write longer explanations
or to temporarily disable parts of your code.
'''
print("Multi-line comments are helpful!")
```
### Why Use Comments?
* **Explain your code:** Help yourself or others understand what the code does.
* **Debugging:** Comment out parts of the code to isolate problems.
* **Documentation:** Make your code more readable and easier to maintain.

## Variables and Assignment
In Python, variables are used to store data. You assign a value to a variable using the = symbol. The variable name should be descriptive and follow certain rules (e.g., no spaces or special characters, should not start with a number). Variables have type that depends on the type of data they store. We'll talk more about data types shortly but for now, take a look at these four variables and note the different types assigned to them.

```{python}
name = "Almighty Python"
age = 25
price = 19.99
is_cool = True

print(name)  
print(age)   
print(price)
print(is_cool)

```

## Basic Data Types: String, Integer, Float, Boolean  

### **String (`str`)**  
Strings represent text and are enclosed in quotes (`'single'` or `"double"`). 

::: {.callout-tip}
Use triple quotes (`"""` or `'''`) for multi-line text.  
:::

```{python}
name = 'Almighty Python - Learning about strings'
question = "What is Python?"
description = """It is a powerful and beginner-friendly programming
language that supports writing long texts on multiple lines like so."""

print(name)
print(question)
print(description)

```
### String Concatenation and Repetition
You can combine strings using the {{< kbd + >}} operator or repeat them using {{< kbd * >}}.

```{python}
first_name = "Almighty"
last_name = "Python"
full_name = first_name + " " + last_name
print(full_name) 

repeated = "Hi! " * 3
print(repeated)
```
::: {.callout-important}
You can do many more operations with strings. Actually string operations are covered in their own section - definitely something to look forward to!
:::

### **Integer (`int`)**
An integer is a whole number without a decimal point. Integers can be positive, negative, or zero.

```{python}
age = 25
year = 2025
balance = -100

print(age + 5)      # Addition
print(year - 2000)  # Subtraction
print(balance * 2)  # Multiplication
```

### **Float (`float`)**
A float is a number with a decimal point. It is used for precise values like measurements, scientific calculations, or financial data.
```{python}
price = 19.99
temperature = -10.5
pi = 3.14159

print(price * 2)         
print(temperature + 5)   
print(pi + pi)   

```

### **Boolean (`bool`)**
Booleans represent logical values: True or False. They are used for decision-making and comparisons in your programs.
```{python}
is_python_fun = True
is_sky_green = False

print(is_python_fun)      
print(is_sky_green)             

```

### Type converstion and interrogation

TODO

## Summary  

In this chapter, youâ€™ve learned about Pythonâ€™s syntax, basic data types, variables, and how to use comments. These are fundamental concepts that will help you build a strong foundation for writing Python programs.  

**Key Takeaways:**  

- Python has four main basic data types: `str`, `int`, `float`, and `bool`.  
- Use variables to store data and make your code more readable.  
- Comments improve code clarity and help with debugging.  

::: {.callout-tip}
ðŸ’¡ Remember: Keep experimenting! The best way to learn is by trying different things in your code. Modify the examples, create your own, and observe the results.  
:::


\newpage
